
'use client'
import Image from "next/image";
import { useState } from "react";

//Deployment ID
// AKfycbzttN7NuVhj4gJaOhODX5YZgJpOfvVF4YoGE9XsrlowE4C8iMIspK1YQXIpz7TJqyiO
// Url:https://script.google.com/macros/s/AKfycbzttN7NuVhj4gJaOhODX5YZgJpOfvVF4YoGE9XsrlowE4C8iMIspK1YQXIpz7TJqyiO/exec

const PRODUCT = {
  name: "ржЖржжрзЗрж░ рж░рж╛ржирж┐ тАУ ржЖржорзНрж░ржкрж╛рж▓рж┐!",
  description:
    "ржпрж╛ржжрзЗрж░ рж░рж╛ржЬрждрзНржмрзЗ рж╕рзНржмрж╛ржЧрждржо! ржмрж╛ржжрж░рзЗрж░ рж░рж╛ржЬрждрзНржмрзЗрж░ рж╕рзЗрж░рж╛ ржлрж╛рж░рзНржорзЗрж░ ржЕржиржирзНржпрж╛ржорж▓рзА тАУ ржмрж╛ржмрж░ ржПржЗ ржЕржиржирзНржпрж╛ржпрж╝ ржЖржо рж╕рж░рж╛рж╕рж░рж┐ ржШрзЛржбрж╝рж╛ржЗржиржмржЧржЫрзЗрж░ ржмрж╛ржЧрж╛ржи ржерзЗржХрзЗред",
  options: [
    { label: "рззрзи ржХрзЗржЬрж┐ ржХрзНржпрж╛рж░рзЗржЯ", value: 12, price: 1450 },
    { label: "рзирзк ржХрзЗржЬрж┐ ржХрзНржпрж╛рж░рзЗржЯ", value: 24, price: 2800 },
  ],
  image1: "/img.jpeg",
  image2: "/img.jpeg",
  image3: "/img.jpeg",
  features: [
    "ржжрзЗрж╢рзЗрж░ ржЕржирзНржпрждржо рж╕рзЗрж░рж╛ ржХрзЛржпрж╝рж╛рж▓рж┐ржЯрж┐рж░ ржЖржорзНрж░ржкрж╛рж▓рж┐",
    "рззрзжрзж% ржлрж░ржорзНржпрж╛рж▓рж┐ржи, ржХрж╛рж░рзНржмрж╛ржЗржб ржУ ржХрзЗржорж┐ржХрзНржпрж╛рж▓ржорзБржХрзНржд",
    "рж░рж╕рж╛рж▓рж╛, ржЕрждрж┐ржорж┐рж╖рзНржЯ ржУ ржЖржБрж╢ржорзБржХрзНржд",
    "ржкрзНрж░рждрж┐ ржХрзЗржЬрж┐рждрзЗ рзктАУрзлржЯрж┐ ржорж╛ржЭрж╛рж░рж┐ ржЖржХрж╛рж░рзЗрж░ ржЖржо",
  ],
  distribution: "ржврж╛ржХрж╛, рзирзп ржорзЗ, рзирзжрзирзк (рж╣рзНржпрж╛ржо ржорзЗржЯрж┐ржирж┐ржЙ ржХрзАржмрж╛ржорзЗржи)",
  contacts: ["01600018656", "01533411968"],
};

const DISTRICTS = [
  "ржврж╛ржХрж╛ - Dhaka", // ржврж╛ржХрж╛ ржкрзНрж░ржержорзЗ
  "ржмрж╛ржЧрзЗрж░рж╣рж╛ржЯ - Bagerhat", "ржмрж╛ржирзНржжрж░ржмрж╛ржи - Bandarban", "ржмрж░ржЧрзБржирж╛ - Barguna", "ржмрж░рж┐рж╢рж╛рж▓ - Barisal", "ржнрзЛрж▓рж╛ - Bhola", "ржмржЧрзБржбрж╝рж╛ - Bogra", "ржмрзНрж░рж╛рж╣рзНржоржгржмрж╛ржбрж╝рж┐ржпрж╝рж╛ - Brahmanbaria", // B
  "ржЪрж╛ржБржжржкрзБрж░ - Chandpur", "ржЪрж╛ржБржкрж╛ржЗржиржмрж╛ржмржЧржЮрзНржЬ - Chapainawabganj", "ржЪржЯрзНржЯржЧрзНрж░рж╛ржо - Chittagong", "ржЪрзБржпрж╝рж╛ржбрж╛ржЩрзНржЧрж╛ - Chuadanga", "ржХрзБржорж┐рж▓рзНрж▓рж╛ - Comilla", "ржХржХрзНрж╕ржмрж╛ржЬрж╛рж░ - Cox's Bazar", // C
  "ржжрж┐ржирж╛ржЬржкрзБрж░ - Dinajpur", // D
  "ржлрж░рж┐ржжржкрзБрж░ - Faridpur", "ржлрзЗржирзА - Feni", // F
  "ржЧрж╛ржЗржмрж╛ржирзНржзрж╛ - Gaibandha", "ржЧрж╛ржЬрзАржкрзБрж░ - Gazipur", "ржЧрзЛржкрж╛рж▓ржЧржЮрзНржЬ - Gopalganj", // G
  "рж╣ржмрж┐ржЧржЮрзНржЬ - Habiganj", // H
  "ржЬрж╛ржорж╛рж▓ржкрзБрж░ - Jamalpur", "ржпрж╢рзЛрж░ - Jessore", "ржЭрж╛рж▓ржХрж╛ржарж┐ - Jhalokati", "ржЭрж┐ржирж╛ржЗржжрж╣ - Jhenaidah", "ржЬржпрж╝ржкрзБрж░рж╣рж╛ржЯ - Joypurhat", // J
  "ржЦрж╛ржЧржбрж╝рж╛ржЫржбрж╝рж┐ - Khagrachhari", "ржЦрзБрж▓ржирж╛ - Khulna", "ржХрж┐рж╢рзЛрж░ржЧржЮрзНржЬ - Kishoreganj", "ржХрзБржбрж╝рж┐ржЧрзНрж░рж╛ржо - Kurigram", "ржХрзБрж╖рзНржЯрж┐ржпрж╝рж╛ - Kushtia", // K
  "рж▓ржХрзНрж╖рзНржорзАржкрзБрж░ - Lakshmipur", "рж▓рж╛рж▓ржоржирж┐рж░рж╣рж╛ржЯ - Lalmonirhat", // L
  "ржорж╛ржжрж╛рж░рзАржкрзБрж░ - Madaripur", "ржорж╛ржЧрзБрж░рж╛ - Magura", "ржорж╛ржирж┐ржХржЧржЮрзНржЬ - Manikganj", "ржорзЗрж╣рзЗрж░ржкрзБрж░ - Meherpur", "ржорзМрж▓ржнрзАржмрж╛ржЬрж╛рж░ - Moulvibazar", "ржорзБржирзНрж╢рж┐ржЧржЮрзНржЬ - Munshiganj", "ржоржпрж╝ржоржирж╕рж┐ржВрж╣ - Mymensingh", // M
  "ржиржУржЧрж╛ржБ - Naogaon", "ржирж╛рж░рж╛ржпрж╝ржгржЧржЮрзНржЬ - Narayanganj", "ржирж░рж╕рж┐ржВржжрзА - Narsingdi", "ржирж╛ржЯрзЛрж░ - Natore", "ржирзЗрждрзНрж░ржХрзЛржирж╛ - Netrokona", "ржирзАрж▓ржлрж╛ржорж╛рж░рзА - Nilphamari", "ржирзЛржпрж╝рж╛ржЦрж╛рж▓рзА - Noakhali", "ржиржбрж╝рж╛ржЗрж▓ - Narail", // N
  "ржкрж╛ржмржирж╛ - Pabna", "ржкржЮрзНржЪржЧржбрж╝ - Panchagarh", "ржкржЯрзБржпрж╝рж╛ржЦрж╛рж▓рзА - Patuakhali", "ржкрж┐рж░рзЛржЬржкрзБрж░ - Pirojpur", // P
  "рж░рж╛ржЬржмрж╛ржбрж╝рзА - Rajbari", "рж░рж╛ржЬрж╢рж╛рж╣рзА - Rajshahi", "рж░рж╛ржЩрзНржЧрж╛ржорж╛ржЯрж┐ - Rangamati", "рж░ржВржкрзБрж░ - Rangpur", // R
  "рж╕рж╛рждржХрзНрж╖рзАрж░рж╛ - Satkhira", "рж╢рж░рзАржпрж╝рждржкрзБрж░ - Shariatpur", "рж╢рзЗрж░ржкрзБрж░ - Sherpur", "рж╕рж┐рж░рж╛ржЬржЧржЮрзНржЬ - Sirajganj", "рж╕рзБржирж╛ржоржЧржЮрзНржЬ - Sunamganj", "рж╕рж┐рж▓рзЗржЯ - Sylhet", // S
  "ржЯрж╛ржЩрзНржЧрж╛ржЗрж▓ - Tangail", "ржарж╛ржХрзБрж░ржЧрж╛ржБржУ - Thakurgaon" // T
];

const COURIERS = [
  "Sundarban",
  "Karatoa",
  "AJR",
  "Janani",
  "SA Paribahan",
];

export default function Home() {
  const [showForm, setShowForm] = useState(false);
  const [form, setForm] = useState({
    name: "",
    phone: "",
    district: "dhaka",
    detailedAddress: "",
    courier: "",
    pack: 12, // default to 12kg
    bkashTransactionId: "",
    bkashNumber: "",
  });
  const [submitted, setSubmitted] = useState(false);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setForm({ ...form, [name]: value });
    
    // Reset courier when district changes
    if (name === 'district') {
      setForm(prev => ({ ...prev, district: value, courier: "" }));
    }
  };

  const handlePackChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setForm({ ...form, pack: Number(e.target.value) });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setSubmitted(true);

    // Prepare data
    const selectedOption = PRODUCT.options.find(opt => opt.value === Number(form.pack));
    const orderTime = new Date().toLocaleString('bn-BD', { 
      timeZone: 'Asia/Dhaka',
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit'
    });
    
    const orderData = {
      name: form.name,
      phone: form.phone,
      district: form.district,
      detailedAddress: form.detailedAddress,
      courier: form.district === 'ржврж╛ржХрж╛' ? 'Home Delivery' : form.courier,
      package: selectedOption ? selectedOption.label : "",
      price: selectedOption ? selectedOption.price : 0,
      bkashTransactionId: form.bkashTransactionId,
      bkashNumber: form.bkashNumber,
      orderTime: orderTime,
      orderAmount: selectedOption ? selectedOption.price : 0,
    };

    // Send to Google Sheets
    await fetch("/api/order", {
      method: "POST",
      body: JSON.stringify(orderData),
      headers: {
        "Content-Type": "application/json",
      },
    });
  };

  const selectedOption = PRODUCT.options.find(opt => opt.value === Number(form.pack));
  const isDhaka = form.district === 'ржврж╛ржХрж╛ - Dhaka';

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-green-100 flex flex-col items-center py-4 px-2">
      {/* Header */}
      <div className="w-full max-w-2xl bg-green-600 rounded-t-2xl shadow-lg p-4 flex flex-col items-center">
        <div className="flex items-center gap-2 mb-2">
          <span className="text-3xl">ЁЯен</span>
          <h1 className="text-2xl md:text-3xl font-bold text-white">{PRODUCT.name}</h1>
        </div>
        <p className="text-white text-center font-medium">{PRODUCT.description}</p>
      </div>

      {/* Info Section */}
      <div className="w-full max-w-2xl bg-white shadow-lg p-4 flex flex-col md:flex-row gap-4 border-b-4 border-green-600">
        <div className="flex-1 bg-green-50 rounded-lg p-3 flex flex-col items-center">
          <div className="font-bold text-green-700 mb-1">ржмрж┐рждрж░ржг рж╕рзНржерж╛ржи ржУ рждрж╛рж░рж┐ржЦ</div>
          <div className="text-sm text-gray-700">{PRODUCT.distribution}</div>
        </div>
        <div className="flex-1 bg-green-100 rounded-lg p-3 flex flex-col items-center">
          <div className="font-bold text-green-700 mb-1">ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи</div>
          <div className="text-sm text-gray-800 flex flex-col gap-1">
            {PRODUCT.contacts.map((c, i) => (
              <span key={i}>{c}</span>
            ))}
          </div>
        </div>
      </div>

      {/* Features */}
      <div className="w-full max-w-2xl bg-white shadow-lg p-4 flex flex-col gap-2">
        {PRODUCT.features.map((f, i) => (
          <div key={i} className="flex items-center gap-2 text-green-800 text-base">
            <span className="text-green-600 text-xl">тЬФя╕П</span>
            {f}
          </div>
        ))}
      </div>
        <div className="w-1/3 flex-1 flex justify-center">
          <Image src={PRODUCT.image1} alt="ржЖржорзНрж░ржкрж╛рж▓рж┐" width={500} height={500} className="w-full h-full rounded-xl border border-green-200 object-cover" />
        </div>
      {/* Images */}
      <div className="w-full max-w-2xl flex flex-row gap-4 my-4">
        <div className="flex-1 flex justify-center">
          <Image src={PRODUCT.image1} alt="ржЖржорзНрж░ржкрж╛рж▓рж┐" width={180} height={120} className="rounded-xl border border-green-200 object-cover" />
        </div>
        <div className="flex-1 flex justify-center">
          <Image src={PRODUCT.image2} alt="ржЖржорзНрж░ржкрж╛рж▓рж┐" width={180} height={120} className="rounded-xl border border-green-200 object-cover" />
        </div>
        <div className="flex-1 flex justify-center">
          <Image src={PRODUCT.image3} alt="ржЖржорзНрж░ржкрж╛рж▓рж┐" width={180} height={120} className="rounded-xl border border-green-200 object-cover" />
        </div>
      </div>

      {/* Order Button or Form */}
      <div className="w-full max-w-2xl flex flex-col items-center mb-8">
        {!showForm && !submitted && (
          <button
            className="bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-8 rounded-full text-lg shadow-lg transition"
            onClick={() => setShowForm(true)}
          >
            ржЕрж░рзНржбрж╛рж░ ржХрж░рзБржи ржПржЦржЗ тАФ рж╕рзАржорж┐ржд рж╕ржоржпрж╝рзЗрж░ ржЬржирзНржп!
          </button>
        )}
        {showForm && !submitted && (
          <form className="w-full bg-white rounded-xl shadow-lg p-6 mt-4 space-y-4" onSubmit={handleSubmit}>
            {/* Package Selection */}
            <div className="flex flex-col gap-2">
              <span className="block text-green-800 font-semibold mb-1">ржкрзНржпрж╛ржХрзЗржЬ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи</span>
              {PRODUCT.options.map((opt) => (
                <label key={opt.value} className="flex items-center gap-2 cursor-pointer">
                  <input
                    type="radio"
                    name="pack"
                    value={opt.value}
                    checked={form.pack === opt.value}
                    onChange={handlePackChange}
                    className="accent-green-600"
                  />
                  <span className="text-green-800">{opt.label} тАФ {opt.price} ржЯрж╛ржХрж╛</span>
                </label>
              ))}
            </div>

            {/* Name */}
            <div>
              <label className="block text-green-800 font-semibold mb-1" htmlFor="name">ржирж╛ржо</label>
              <input
                required
                className="w-full border border-green-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-400"
                type="text"
                id="name"
                name="name"
                value={form.name}
                onChange={handleChange}
              />
            </div>

            {/* Mobile Number */}
            <div>
              <label className="block text-green-800 font-semibold mb-1" htmlFor="phone">ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░</label>
              <input
                required
                className="w-full border border-green-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-400"
                type="text"
                id="phone"
                name="phone"
                value={form.phone}
                onChange={handleChange}
              />
            </div>

            {/* District */}
            <div>
              <label className="block text-green-800 font-semibold mb-1" htmlFor="district">ржЬрзЗрж▓рж╛</label>
              <select
                required
                className= "text-green-800 w-full border border-green-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-400"
                id="district"
                name="district"
                value={form.district}
                onChange={handleChange}
              >
                <option className="text-black" value="">ржЬрзЗрж▓рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи</option>
                {DISTRICTS.map((district) => (
                  <option className="text-black" key={district} value={district}>{district}</option>
                ))}
              </select>
            </div>

            {/* Detailed Address */}
            <div>
              <label className="block text-green-800 font-semibold mb-1" htmlFor="detailedAddress">ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржарж┐ржХрж╛ржирж╛</label>
              <textarea
                required
                className="text-green-800 w-full border border-green-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-400"
                id="detailedAddress"
                name="detailedAddress"
                rows={2}
                value={form.detailedAddress}
                onChange={handleChange}
                placeholder="ржмрж╛ржбрж╝рж┐рж░ ржиржорзНржмрж░, рж░рж╛рж╕рзНрждрж╛рж░ ржирж╛ржо, ржПрж▓рж╛ржХрж╛рж░ ржирж╛ржо"
              />
            </div>

            {/* Courier Selection */}
            {form.district && (
              <div>
                <label className="block text-green-800 font-semibold mb-1" htmlFor="courier">
                  {isDhaka ? "ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржкржжрзНржзрждрж┐" : "ржХрзБрж░рж┐ржпрж╝рж╛рж░ рж╕рж╛рж░рзНржнрж┐рж╕"}
                </label>
                {isDhaka ? (
                  <input
                    className="text-green-800 w-full border border-green-300 rounded px-3 py-2 bg-gray-100"
                    type="text"
                    value="Home Delivery"
                    readOnly
                  />
                ) : (
                  <select
                    required
                    className="text-green-800 w-full border border-green-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-400"
                    id="courier"
                    name="courier"
                    value={form.courier}
                    onChange={handleChange}
                  >
                    <option value="">ржХрзБрж░рж┐ржпрж╝рж╛рж░ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи</option>
                    {COURIERS.map((courier) => (
                      <option key={courier} value={courier}>{courier}</option>
                    ))}
                  </select>
                )}
              </div>
            )}

            {/* Payment Information */}
            <div className="border-t pt-4">
              <h3 className="text-green-800 font-semibold mb-3">ржкрзЗржорзЗржирзНржЯ рждржерзНржп</h3>
              
              <div>
                <label className="block text-green-800 font-semibold mb-1" htmlFor="bkashTransactionId">ржмрж┐ржХрж╛рж╢ ржЯрзНрж░тАНрзНржпрж╛ржиржЬрзЗржХрж╢ржи ржЖржЗржбрж┐</label>
                <input
                  required
                  className="text-green-800 w-full border border-green-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-400"
                  type="text"
                  id="bkashTransactionId"
                  name="bkashTransactionId"
                  value={form.bkashTransactionId}
                  onChange={handleChange}
                  placeholder="ржпрзЗржоржи: 9G451XXXXX"
                />
              </div>

              <div className="mt-3">
                <label className="block text-green-800 font-semibold mb-1" htmlFor="bkashNumber">ржмрж┐ржХрж╛рж╢ ржиржорзНржмрж╛рж░</label>
                <input
                  required
                  className="text-green-800  w-full border border-green-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-400"
                  type="text"
                  id="bkashNumber"
                  name="bkashNumber"
                  value={form.bkashNumber}
                  onChange={handleChange}
                  placeholder="ржпрзЗ ржиржорзНржмрж░ ржерзЗржХрзЗ ржкрзЗржорзЗржирзНржЯ ржХрж░рзЗржЫрзЗржи"
                />
              </div>
            </div>

            <div className="flex justify-between items-center mt-4">
              <span className="font-semibold text-green-800">
                ржорзЛржЯ: {selectedOption ? selectedOption.price : 0} ржЯрж╛ржХрж╛
              </span>
              <button
                type="submit"
                className="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-6 rounded shadow"
              >
                ржЕрж░рзНржбрж╛рж░ ржХржиржлрж╛рж░рзНржо ржХрж░рзБржи
              </button>
            </div>
          </form>
        )}
        {submitted && (
          <div className="w-full bg-green-50 rounded-xl shadow-lg p-6 mt-4 flex flex-col items-center">
            <h2 className="text-2xl font-bold text-green-700 mb-2">ржзржирзНржпржмрж╛ржж!</h2>
            <p className="mb-4 text-green-800">ржЖржкржирж╛рж░ ржЕрж░рзНржбрж╛рж░ ржЧрзНрж░рж╣ржг ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред рж╢рзАржШрзНрж░ржЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рж╛ рж╣ржмрзЗред</p>
            <div className="bg-white rounded-lg p-4 w-full">
              <h3 className="text-green-800 font-bold mb-2">ржЕрж░рзНржбрж╛рж░ рж╕рж╛рж░рж╛ржВрж╢</h3>
              <ul className="text-green-800 text-sm mb-2">
                <li><strong>ржирж╛ржо:</strong> {form.name}</li>
                <li><strong>ржорзЛржмрж╛ржЗрж▓:</strong> {form.phone}</li>
                <li><strong>ржЬрзЗрж▓рж╛:</strong> {form.district}</li>
                <li><strong>ржарж┐ржХрж╛ржирж╛:</strong> {form.detailedAddress}</li>
                <li><strong>ржбрзЗрж▓рж┐ржнрж╛рж░рж┐:</strong> {isDhaka ? 'Home Delivery' : form.courier}</li>
                <li><strong>ржкрзНржпрж╛ржХрзЗржЬ:</strong> {selectedOption ? selectedOption.label : ""}</li>
                <li><strong>ржорзЛржЯ:</strong> {selectedOption ? selectedOption.price : 0} ржЯрж╛ржХрж╛</li>
                <li><strong>ржмрж┐ржХрж╛рж╢ ржЯрж┐ржЖржЗржбрж┐:</strong> {form.bkashTransactionId}</li>
              </ul>
              <button
                className="mt-2 text-green-700 underline"
                onClick={() => { setShowForm(false); setSubmitted(false); setForm({
                  name: "", phone: "", district: "", detailedAddress: "", courier: "", pack: 12, bkashTransactionId: "", bkashNumber: ""
                }); }}
              >
                ржирждрзБржи ржЕрж░рзНржбрж╛рж░ ржХрж░рзБржи
              </button>
            </div>
          </div>
        )}
      </div>

      <footer className="mt-10 text-green-400 text-xs">&copy; {new Date().getFullYear()} SeasonscapeBDред</footer>
    </div>
  );
}